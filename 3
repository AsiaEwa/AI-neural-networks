%utworzenie zestawu danych na podstawie plików z (pod)katalogów z obrazami 
%cyfr z katalogu przykładów Matlaba dla sieci neuronowych 
digitDatasetPath = fullfile(matlabroot,'toolbox','nnet','nndemos', ... 
'nndatasets','DigitDataset');
imds = imageDatastore(digitDatasetPath,...
'IncludeSubfolders',true,'LabelSource','foldernames');
%pokazanie 20 przypadkowych obrazków z zestawu figure; 
perm = randperm(length(imds.Files),20); for i = 1:20 subplot(4,5,i); 
imshow(imds.Files{perm(i)}); end
%sprawdzenie rozmiaru jednego obrazka 
disp('rozmiar obrazka'); img = readimage(imds,1); size(img)
%policzenie ile jest etykiet w danych uczących i ile obrazków jest dla danej etykiety 
disp('etykiety i liczba wzorców'); 
labelCount = countEachLabel(imds);
%podział zbioru danych na zestaw uczący i walidacyjny 
[imdsTrain,imdsValidation] = splitEachLabel(imds,750,'randomize');

%zdefiniowanie warstw sieci glębokiej (15 warstw) 
layers = [ imageInputLayer([28 28 1]) convolution2dLayer(3,8,'Padding','same') batchNormalizationLayer reluLayer maxPooling2dLayer(2,'Stride',2) convolution2dLayer(3,16,'Padding','same') batchNormalizationLayer reluLayer maxPooling2dLayer(2,'Stride',2) convolution2dLayer(3,32,'Padding','same') batchNormalizationLayer reluLayer fullyConnectedLayer(10) softmaxLayer classificationLayer];

%wybór opcji uczenia 
options = trainingOptions('sgdm', ... 
'InitialLearnRate',0.01, ... 
'MaxEpochs',4, ... 
'Shuffle','every-epoch', ... 
'ValidationData',imdsValidation, ... 
'ValidationFrequency',30, ... 
'Verbose',false, ...
    'Plots','training-progress');
%uczenie sieci 
net = trainNetwork(imdsTrain,layers,options);
